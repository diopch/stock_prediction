# list of the companies
# refer to this name to ask the csv file for the analysis
company_list = [
    'asml', 'lvmh', 'sap', 'siemens', 'total', 'sanofi', 'allianz',
    'loreal', 'schneider', 'iberdrola', 'enel', 'air-liquide', 'basf', 'bayer',
    'adidas', 'airbus', 'deutsche-telecom', 'daimler', 'bnp',
    'anheuser-busch', 'vinci', 'banco-santander', 'philips', 'kering',
    'deutsche-post', 'axa', 'safran', 'danone', 'essilor', 'intensa',
    'munchener', 'pernod', 'vonovia', 'vw', 'ing', 'crh', 'industria-diseno',
    'kone', 'deutsche-borse', 'ahold', 'flutter', 'amadeus', 'engie', 'bmw',
    'vivendi', 'eni', 'nokia'
]

# we create a dictionary with name in key and csv file in value
company_dict = {
    'asml': 'ASML.AS',
    'lvmh': 'MC.PA',
    'sap': 'SAP.DE',
    'siemens': 'SIE.DE',
    'total': 'FP.PA',
    'sanofi': 'SAN.PA',
    'allianz': 'ALV.DE',
    'loreal': 'OR.PA',
    'schneider': 'SU.PA',
    'iberdrola': 'IBE.MC',
    'enel': 'ENEL.MI',
    'air-liquide': 'AI.PA',
    'basf': 'BAS.DE',
    'bayer': 'BAYN.DE',
    'adidas': 'ADS.DE',
    'airbus': 'AIR.PA',
    'deutsche-telecom': 'DTE.DE',
    'daimler': 'DAI.DE',
    'bnp': 'BNP.PA',
    'anheuser-busch': 'ABI.BR',
    'vinci': 'DG.PA',
    'banco-santander': 'SAN.MC',
    'philips': 'PHIA.AS',
    'kering': 'KER.PA',
    'deutsche-post': 'DPW.DE',
    'axa': 'CS.PA',
    'safran': 'SAF.PA',
    'danone': 'BN.PA',
    'essilor': 'EL.PA',
    'intensa': 'ISP.MI',
    'munchener': 'MUV2.DE',
    'pernod': 'RI.PA',
    'vonovia': 'VNA.DE',
    'vw': 'VOW3.DE',
    'ing': 'INGA.AS',
    'crh': 'CRG.IR',
    'industria-diseno': 'ITX.MC',
    'kone': 'KNEBV.HE',
    'deutsche-borse': 'DB1.DE',
    'ahold': 'AHOG.DE',
    'flutter': 'FLTR.IR',
    'amadeus': 'AMS.MC',
    'engie': 'ENGI.PA',
    'bmw': 'BMW.DE',
    'vivendi': 'VIV.PA',
    'eni': 'ENI.MI',
    'nokia': 'NOKIA.HE'
}

# in that dictionary,
# we store the best max_train we found during the analysis
dict_max_train = {
    'asml': 43,
    'lvmh': 43,
    'sap': 46,
    'siemens': 46,
    'total': 46,
    'sanofi': 44,
    'allianz': 46,
    'loreal': 46,
    'schneider': 45,
    'iberdrola': 43,
    'enel': 44,
    'air-liquide': 40,
    'basf': 43,
    'bayer': 45,
    'adidas': 42,
    'airbus': 44,
    'deutsche-telecom': 45,
    'daimler': 44,
    'bnp': 42,
    'anheuser-busch': 44,
    'vinci': 41,
    'prosus': 44,
    'banco-santander': 43,
    'philips': 42,
    'kering': 42,
    'deutsche-post': 46,
    'axa': 46,
    'safran': 44,
    'danone': 46,
    'essilor': 41,
    'intensa': 46,
    'munchener': 45,
    'pernod': 40,
    'vonovia': 45,
    'vw': 46,
    'ing': 44,
    'crh': 44,
    'industria-diseno': 44,
    'kone': 43,
    'deutsche-borse': 46,
    'ahold': 46,
    'flutter': 43,
    'amadeus': 45,
    'engie': 45,
    'bmw': 41,
    'vivendi': 41,
    'eni': 45,
    'nokia': 46
}

# in that dictionary, we store the exogenous features
# used to train the model
exo_dict = {
    'asml': ['High-Close_ASML.AS', 'Low-Close_ASML.AS'],
    'lvmh': ['High-Close_MC.PA', 'Low-Close_MC.PA'],
    'sap': ['High-Close_SAP.DE', 'Low-Close_SAP.DE'],
    'siemens': ['High-Close_SIE.DE', 'Low-Close_SIE.DE'],
    'total': ['High-Close_FP.PA', 'Low-Close_FP.PA'],
    'sanofi': ['High-Close_SAN.PA', 'Low-Close_SAN.PA'],
    'allianz': ['High-Close_ALV.DE', 'Low-Close_ALV.DE'],
    'loreal': ['High-Close_OR.PA', 'Low-Close_OR.PA'],
    'schneider': ['High-Close_SU.PA', 'Low-Close_SU.PA'],
    'iberdrola': ['High-Close_IBE.MC', 'Low-Close_IBE.MC'],
    'enel': ['High-Close_ENEL.MI', 'Low-Close_ENEL.MI'],
    'air-liquide': ['High-Close_AI.PA', 'Low-Close_AI.PA'],
    'basf': ['High-Close_BAS.DE', 'Low-Close_BAS.DE'],
    'bayer': ['High-Close_BAYN.DE', 'Low-Close_BAYN.DE'],
    'adidas': ['High-Close_ADS.DE', 'Low-Close_ADS.DE'],
    'airbus': ['High-Close_AIR.PA', 'Low-Close_AIR.PA'],
    'deutsche-telecom': ['High-Close_DTE.DE', 'Low-Close_DTE.DE'],
    'daimler': ['High-Close_DAI.DE', 'Low-Close_DAI.DE'],
    'bnp': ['High-Close_BNP.PA', 'Low-Close_BNP.PA'],
    'anheuser-busch': ['High-Close_ABI.BR', 'Low-Close_ABI.BR'],
    'vinci': ['High-Close_DG.PA', 'Low-Close_DG.PA'],
    'prosus': ['High-Close_PRX.AS', 'Low-Close_PRX.AS'],
    'banco-santander': ['High-Close_SAN.MC', 'Low-Close_SAN.MC'],
    'philips': ['High-Close_PHIA.AS', 'Low-Close_PHIA.AS'],
    'kering': ['High-Close_KER.PA', 'Low-Close_KER.PA'],
    'deutsche-post': ['High-Close_DPW.DE', 'Low-Close_DPW.DE'],
    'axa': ['High-Close_CS.PA', 'Low-Close_CS.PA'],
    'safran': ['High-Close_SAF.PA', 'Low-Close_SAF.PA'],
    'danone': ['High-Close_BN.PA', 'Low-Close_BN.PA'],
    'essilor': ['High-Close_EL.PA', 'Low-Close_EL.PA'],
    'intensa': ['High-Close_ISP.MI', 'Low-Close_ISP.MI'],
    'munchener': ['High-Close_MUV2.DE', 'Low-Close_MUV2.DE'],
    'pernod': ['High-Close_RI.PA', 'Low-Close_RI.PA'],
    'vonovia': ['High-Close_VNA.DE', 'Low-Close_VNA.DE'],
    'vw': ['High-Close_VOW3.DE', 'Low-Close_VOW3.DE'],
    'ing': ['High-Close_INGA.AS', 'Low-Close_INGA.AS'],
    'crh': ['High-Close_CRG.IR', 'Low-Close_CRG.IR'],
    'industria-diseno': ['High-Close_ITX.MC', 'Low-Close_ITX.MC'],
    'kone': ['High-Close_KNEBV.HE', 'Low-Close_KNEBV.HE'],
    'deutsche-borse': ['High-Close_DB1.DE', 'Low-Close_DB1.DE'],
    'ahold': ['High-Close_AHOG.DE', 'Low-Close_AHOG.DE'],
    'flutter': ['High-Close_FLTR.IR', 'Low-Close_FLTR.IR'],
    'amadeus': ['High-Close_AMS.MC', 'Low-Close_AMS.MC'],
    'engie': ['High-Close_ENGI.PA', 'Low-Close_ENGI.PA'],
    'bmw': ['High-Close_BMW.DE', 'Low-Close_BMW.DE'],
    'vivendi': ['High-Close_VIV.PA', 'Low-Close_VIV.PA'],
    'eni': ['High-Close_ENI.MI', 'Low-Close_ENI.MI'],
    'nokia': ['High-Close_NOKIA.HE', 'Low-Close_NOKIA.HE']
}

exogenous_dict = {
  'sp500' : '^GSPC',
  'gold' : 'GC=F',
  'eurusd' : 'EURUSD=X',
  'nasdaq' : '^IXIC',
  'crude' : 'CL=F',
  'vix' : '^VIX',
}
